# FindersKeepers v2 - Example environment file
# Copy this file to `.env` in the project root and adjust the values as needed.
# These settings are used by the Docker services defined in docker‑compose.yml
# and by the frontend during development.  Replace all `changeme_*` values with
# secure secrets before deploying.

# -------------------------------------------
# AUTHENTICATION & SECURITY
# -------------------------------------------

# Basic auth for the (legacy) n8n service.  Use your email/username and a strong password.
N8N_BASIC_AUTH_USER=admin@example.com
N8N_BASIC_AUTH_PASSWORD=changeme_n8n_password

# JWT secret used by n8n for signing session tokens.  Generate a long random string:
#   openssl rand -base64 32
N8N_JWT_SECRET=changeme_n8n_jwt_secret

# Secret used by FastAPI for session encryption.  Also generate a random value:
#   openssl rand -base64 32
SESSION_SECRET=changeme_fastapi_session_secret

# -------------------------------------------
# DATABASE CREDENTIALS
# -------------------------------------------

# PostgreSQL configuration
POSTGRES_USER=finderskeepers
POSTGRES_PASSWORD=changeme_postgres_password
POSTGRES_DB=finderskeepers_v2

# Neo4j configuration
NEO4J_USER=neo4j
NEO4J_PASSWORD=changeme_neo4j_password

# ⚠️ IMPORTANT: never use the default password in production!  Change the
# `changeme_neo4j_password` value to a strong secret.

# -------------------------------------------
# API KEYS (optional)
# -------------------------------------------

# Cloud AI service keys.  Leave these empty if you rely solely on the local models.
OPENAI_API_KEY=
GOOGLE_API_KEY=
ANTHROPIC_API_KEY=

# -------------------------------------------
# DOCKER REGISTRY (optional)
# -------------------------------------------

# Docker Hub credentials for pulling private images.  Only needed if you
# distribute private container images.
DOCKER_USERNAME=
DOCKER_TOKEN=

# -------------------------------------------
# APPLICATION SETTINGS
# -------------------------------------------

# Timezone configuration for all containers
TZ=America/Chicago
TIMEZONE=America/Chicago

# Local LLM settings – these should match the models you have installed in Ollama.
USE_LOCAL_LLM=true
EMBEDDING_MODEL=mxbai-embed-large
CHAT_MODEL=llama3:8b

# Connection information for your local Ollama service.  The `fk2_ollama`
# container exposes the Ollama API on port 11434.  Update this if you
# customise the service name or port in docker‑compose.yml.
OLLAMA_URL=http://fk2_ollama:11434

# Automatic document and conversation processing
ENABLE_AUTO_PROCESSING=true
AUTO_PROCESS_CONVERSATIONS=true
PROCESS_BATCH_SIZE=10

# Background processing configuration
FK2_ENABLE_BACKGROUND_PROCESSING=true
FK2_PROCESSING_INTERVAL_MINUTES=5
FK2_PROCESSING_BATCH_SIZE=10
FK2_PROCESSING_MAX_RETRIES=3
FK2_PROCESSING_START_DELAY_SECONDS=30

# -------------------------------------------
# FRONTEND CONFIGURATION
# -------------------------------------------

# These variables configure the React frontend when running inside Docker.
# They point to the internal service names defined in docker‑compose.yml.  The
# `fk2_*` names are the actual container names on the Docker network.  Adjust
# these if you customise the compose file.
VITE_API_URL=http://fk2_fastapi:80
VITE_WS_URL=ws://fk2_fastapi:80
VITE_NEO4J_URI=bolt://fk2_neo4j:7687
VITE_NEO4J_USER=${NEO4J_USER}
VITE_NEO4J_PASSWORD=${NEO4J_PASSWORD}
VITE_QDRANT_URL=http://fk2_qdrant:6333
