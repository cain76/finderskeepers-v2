{
  "name": "Agent Action Tracker",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "agent-actions",
        "responseMode": "lastNode",
        "responseData": "allEntries",
        "options": {}
      },
      "id": "e27868b4-04b0-4fa4-9d81-c05df9858921",
      "name": "Agent Action Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -800,
        240
      ],
      "webhookId": "b8f20346-acff-49d2-b23f-8c66d67cd800"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "action_id",
              "name": "action_id",
              "value": "={{ $json.body.action_id || 'action_' + $uuid }}",
              "type": "string"
            },
            {
              "id": "session_id",
              "name": "session_id",
              "value": "={{ $json.body.session_id || 'unknown' }}",
              "type": "string"
            },
            {
              "id": "action_type",
              "name": "action_type",
              "value": "={{ $json.body.action_type || 'command' }}",
              "type": "string"
            },
            {
              "id": "description",
              "name": "description",
              "value": "={{ $json.body.description || 'Action performed by agent' }}",
              "type": "string"
            },
            {
              "id": "details",
              "name": "details",
              "value": "={{ $json.body.details }}",
              "type": "object"
            },
            {
              "id": "files_affected",
              "name": "files_affected",
              "value": "={{ $json.body.files_affected }}",
              "type": "array"
            },
            {
              "id": "success",
              "name": "success",
              "value": "={{ $json.body.success !== undefined ? $json.body.success : true }}",
              "type": "boolean"
            },
            {
              "id": "is_exit_command",
              "name": "is_exit_command",
              "value": "={{ $json.body.action_type === 'user_exit_command' }}",
              "type": "boolean"
            },
            {
              "id": "priority",
              "name": "priority",
              "value": "={{ $json.body.action_type === 'user_exit_command' ? 'high' : 'normal' }}",
              "type": "string"
            },
            {
              "id": "is_conversation",
              "name": "is_conversation",
              "value": "={{ $json.body.action_type && $json.body.action_type.startsWith('conversation:') }}",
              "type": "boolean"
            },
            {
              "id": "message_type",
              "name": "message_type",
              "value": "={{ $json.body.details && $json.body.details.message_type ? $json.body.details.message_type : '' }}",
              "type": "string"
            },
            {
              "id": "content",
              "name": "content",
              "value": "={{ $json.body.details && $json.body.details.full_content ? $json.body.details.full_content : '' }}",
              "type": "string"
            },
            {
              "id": "reasoning",
              "name": "reasoning",
              "value": "={{ $json.body.details && $json.body.details.reasoning ? $json.body.details.reasoning : '' }}",
              "type": "string"
            },
            {
              "id": "tools_used",
              "name": "tools_used",
              "value": "={{ $json.body.details && $json.body.details.tools_used ? $json.body.details.tools_used : [] }}",
              "type": "array"
            },
            {
              "id": "conversation_context",
              "name": "conversation_context",
              "value": "={{ $json.body.details && $json.body.details.context ? $json.body.details.context : {} }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "ad4376a0-51a0-4631-9c4c-aced114a76c1",
      "name": "Transform Action Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -600,
        240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "is_conversation_message",
              "leftValue": "={{ $('Transform Action Data').item.json.is_conversation }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "true"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4f9e8d6c-2a3b-5c0d-9e7f-0a1c5d4e3f2b",
      "name": "Route Conversation Messages",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -400,
        240
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO conversation_messages (\n    message_id,\n    session_id,\n    message_type,\n    content,\n    context,\n    reasoning,\n    tools_used,\n    files_referenced\n) VALUES (\n    '{{ $('Transform Action Data').item.json.action_id }}',\n    '{{ $('Transform Action Data').item.json.session_id }}',\n    '{{ $('Transform Action Data').item.json.message_type }}',\n    '{{ $('Transform Action Data').item.json.content }}',\n    '{{ JSON.stringify($('Transform Action Data').item.json.conversation_context || {}) }}',\n    '{{ $('Transform Action Data').item.json.reasoning || \"\" }}',\n    '{{ JSON.stringify($('Transform Action Data').item.json.tools_used || []) }}',\n    '{{ JSON.stringify($('Transform Action Data').item.json.files_affected || []) }}'\n)",
        "options": {}
      },
      "id": "6928cab4-76ee-5b31-ac85-951e70f7d5d9",
      "name": "Log Conversation Message",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        -200,
        160
      ],
      "credentials": {
        "postgres": {
          "id": "finderskeepers_postgres",
          "name": "FindersKeepers PostgreSQL"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO agent_actions (\n    action_id,\n    session_id,\n    action_type,\n    description,\n    details,\n    files_affected,\n    success,\n    created_at\n) VALUES (\n    '{{ $('Transform Action Data').item.json.action_id }}',\n    '{{ $('Transform Action Data').item.json.session_id }}',\n    '{{ $('Transform Action Data').item.json.action_type }}',\n    '{{ $('Transform Action Data').item.json.description }}',\n    '{{ JSON.stringify($('Transform Action Data').item.json.details || {}) }}'::jsonb,\n    '{{ JSON.stringify($('Transform Action Data').item.json.files_affected || []) }}'::jsonb,\n    {{ $('Transform Action Data').item.json.success }},\n    NOW()\n)",
        "options": {}
      },
      "id": "5817bad3-65fd-4a20-b8da-850d69e6c4c8",
      "name": "Log Agent Action",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        -200,
        320
      ],
      "credentials": {
        "postgres": {
          "id": "finderskeepers_postgres",
          "name": "FindersKeepers PostgreSQL"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "success",
              "name": "success",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "message",
              "name": "message",
              "value": "Agent action logged successfully",
              "type": "string"
            },
            {
              "id": "action_id",
              "name": "action_id",
              "value": "={{ $('Transform Action Data').item.json.action_id }}",
              "type": "string"
            },
            {
              "id": "session_id",
              "name": "session_id",
              "value": "={{ $('Transform Action Data').item.json.session_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "96ad7361-97df-4a9c-8657-650cbcb106ad",
      "name": "Action Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        240
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Agent Action Webhook": {
      "main": [
        [
          {
            "node": "Transform Action Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transform Action Data": {
      "main": [
        [
          {
            "node": "Route Conversation Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route Conversation Messages": {
      "main": [
        [
          {
            "node": "Log Conversation Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Agent Action",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Conversation Message": {
      "main": [
        [
          {
            "node": "Action Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Agent Action": {
      "main": [
        [
          {
            "node": "Action Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0fa04010-2e1d-4e65-bb59-41dbd17e9778",
  "meta": {
    "instanceId": "ac197806a966aef7a32a37f88a86659b96901c5596e657b15fe03671fab2eec0"
  },
  "id": "g5S4zSSdSaTujRDU",
  "tags": [
    {
      "createdAt": "2025-07-05T15:56:56.588Z",
      "updatedAt": "2025-07-05T15:56:56.588Z",
      "id": "wziWqzrMJF7yBPeO",
      "name": "Agent Automation"
    }
  ]
}